---
- name: Set up pihub server on Ubuntu server
  hosts: raspberrypi
  become: yes

  vars:
    user_name: nedo
    user_password: rutles
    fstab_entries:
      - "truenas.local:/mnt/MyMagicNAS/media/Movies	/media/Movies	nfs auto,nofail,noatime,nolock,intr,tcp,actimeo=1800 0 0"
      - "truenas.local:/mnt/MyMagicNAS/media/Series	/media/Series	nfs auto,nofail,noatime,nolock,intr,tcp,actimeo=1800 0 0"
      - "/dev/sda2	/media/downloads	ext4	auto,nofail  0 0"
    docker_repo_url: https://download.docker.com/linux/ubuntu
    docker_gpg_key: https://download.docker.com/linux/ubuntu/gpg
    static_ip: 192.168.0.91
    netplan_config_file: /etc/netplan/01-netcfg.yaml

  tasks:
    - name: Set a hostname
      ansible.builtin.hostname:
        name: pihub
    - name: Ensure user exists
      user:
        name: "{{ user_name }}"
        password: "{{ user_password | password_hash('sha512') }}"
        state: present
        shell: /bin/bash

    - name: Add lines to /etc/fstab
      lineinfile:
        path: /etc/fstab
        line: "{{ item }}"
        state: present
      loop: "{{ fstab_entries }}"

    - name: Update APT cache
      apt:
        update_cache: yes

    - name: Install dependencies for Docker
      apt:
        name:
          - ca-certificates
          - curl
          - nfs-commons
          - avahi-daemon
        state: present

    - name: Create directory for Docker keyrings
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Add Docker's official GPG key
      get_url:
        url: "{{ docker_gpg_key }}"
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Add Docker repository
      shell: |
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] {{ docker_repo_url }} $(. /etc/os-release && echo \"$VERSION_CODENAME\") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
      args:
        executable: /bin/bash

    - name: Update APT cache after adding Docker repository
      apt:
        update_cache: yes

    - name: Install Docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Add user to docker group
      user:
        name: "{{ user_name }}"
        groups: docker
        append: yes

    - name: Configure static IP address
      copy:
        content: |
          network:
            version: 2
            renderer: networkd
            ethernets:
              eth0:
                addresses:
                  - {{ static_ip }}/24
                routes:
                  - to: default
                    via: 192.168.0.1
                nameservers:
                  addresses: [8.8.8.8, 1.1.1.1]
        dest: "{{ netplan_config_file }}"
        owner: root
        group: root
        mode: '0644'

    - name: Apply Netplan configuration
      command: netplan apply

    - name: Restart the system
      ansible.builtin.reboot:
